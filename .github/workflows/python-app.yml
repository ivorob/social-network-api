name: build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Install pip, flake8, pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pytest-cov wheel setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Check python code with linter
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --show-source --statistics

      # Run tests
      - name: Test with pytest
        run: |
          pytest tests.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml

      # Upload tests artifacts
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      # Build wheel package (PEP 427)
      - name: Build wheel package
        run: |
          echo "PACKAGE_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
          python setup.py bdist_wheel

      # Upload commit package 
      - name: Upload commit wheel package
        uses: actions/upload-artifact@v3
        with:
          name: Social-Network-Api-${{ env.PACKAGE_VERSION }}
          path: dist/*.whl
